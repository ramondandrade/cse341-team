{
  "swagger": "2.0",
  "info": {
    "title": "RR-Character-Manager ",
    "description": "CSE 341 Final project - RR-Character-Manager",
    "author": "Ryndee van Langeveld, Ramon Andrade",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/character/": {
      "get": {
        "tags": [
          "Characters"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Characters"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "userId": {
                  "example": "any"
                },
                "class": {
                  "example": "any"
                },
                "race": {
                  "example": "any"
                },
                "level": {
                  "example": 1
                },
                "hitPoints": {
                  "example": 1
                },
                "armorClass": {
                  "example": 1
                },
                "strength": {
                  "example": 1
                },
                "dexterity": {
                  "example": 1
                },
                "constitution": {
                  "example": 1
                },
                "intelligence": {
                  "example": 1
                },
                "wisdom": {
                  "example": 1
                },
                "charisma": {
                  "example": 1
                },
                "background": {
                  "example": "any"
                },
                "alignment": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/character/{id}": {
      "get": {
        "tags": [
          "Characters"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Characters"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/character/user/{id}": {
      "get": {
        "tags": [
          "Characters"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/character/{char_id}": {
      "put": {
        "tags": [
          "Characters"
        ],
        "description": "",
        "parameters": [
          {
            "name": "char_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "userId": {
                  "example": "any"
                },
                "class": {
                  "example": "any"
                },
                "race": {
                  "example": "any"
                },
                "level": {
                  "example": 1
                },
                "hitPoints": {
                  "example": 1
                },
                "armorClass": {
                  "example": 1
                },
                "strength": {
                  "example": 1
                },
                "dexterity": {
                  "example": 1
                },
                "constitution": {
                  "example": 1
                },
                "intelligence": {
                  "example": 1
                },
                "wisdom": {
                  "example": 1
                },
                "charisma": {
                  "example": 1
                },
                "background": {
                  "example": "any"
                },
                "alignment": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/player/": {
      "get": {
        "tags": [
          "Players"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Players"
        ],
        "description": "Creating a player here is not recommended. If you want to create a player, please go to /auth/github",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "your github username"
                },
                "profileUrl": {
                  "example": "https://github.com/example"
                },
                "characters": {
                  "example": [
                    [
                      "character_id",
                      "characterName"
                    ],
                    [
                      "character_id",
                      "characterName"
                    ]
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/player/{id}": {
      "get": {
        "tags": [
          "Players"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Players"
        ],
        "description": "Please change only your own data when using this route. To use this route copy and paste your username, profileUrl, and characters from the GET /players/, and make the desired changes. Only change your profileUrl if it has changed.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "your github username"
                },
                "profileUrl": {
                  "example": "https://github.com/example"
                },
                "characters": {
                  "example": [
                    [
                      "character_id",
                      "characterName"
                    ],
                    [
                      "character_id",
                      "characterName"
                    ]
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Players"
        ],
        "description": "Please delete only your own user data when using this route",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/quest/": {
      "get": {
        "tags": [
          "Quests"
        ],
        "summary": "Get all quests",
        "description": "Retrieve all quests from the database",
        "responses": {
          "200": {
            "description": "Quests retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "$ref": "#/definitions/Quest"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Quests"
        ],
        "summary": "Create a new quest",
        "description": "Create a new quest in the database",
        "parameters": [
          {
            "name": "quest",
            "in": "body",
            "description": "Quest data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Quest created successfully",
            "schema": {
              "$ref": "#/definitions/Quest"
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/quest/{id}": {
      "get": {
        "tags": [
          "Quests"
        ],
        "summary": "Get quest by ID",
        "description": "Retrieve a specific quest by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Quest ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Quest retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Quest"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Quest not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Quests"
        ],
        "summary": "Update quest by ID",
        "description": "Update an existing quest by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Quest ID"
          },
          {
            "name": "quest",
            "in": "body",
            "description": "Updated quest data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Quest updated successfully",
            "schema": {
              "$ref": "#/definitions/Quest"
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Quest not found"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Quests"
        ],
        "summary": "Delete quest by ID",
        "description": "Delete a quest from the database by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Quest ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Quest deleted successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Quest not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/inventory/": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Inventory"
        ],
        "description": "One character per item. If you want to give this item to another character you need to make a new item.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "Stick"
                },
                "type": {
                  "example": "Weapon"
                },
                "rarity": {
                  "example": "Common"
                },
                "levelRequirement": {
                  "example": 1
                },
                "characterName": {
                  "example": "characterName"
                },
                "characterId": {
                  "example": "character_id"
                },
                "description": {
                  "example": "A long wooden stick"
                },
                "quantity": {
                  "example": 1
                },
                "stats": {
                  "type": "object",
                  "properties": {
                    "attack": {
                      "example": 1
                    },
                    "defense": {
                      "example": 0
                    },
                    "manaBoost": {
                      "example": 0
                    },
                    "hpBoost": {
                      "example": 0
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/inventory/{id}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Inventory"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "Stick"
                },
                "type": {
                  "example": "Weapon"
                },
                "rarity": {
                  "example": "Common"
                },
                "levelRequirement": {
                  "example": 1
                },
                "characterName": {
                  "example": "characterName"
                },
                "characterId": {
                  "example": "character_id"
                },
                "description": {
                  "example": "A long wooden stick"
                },
                "quantity": {
                  "example": 1
                },
                "stats": {
                  "type": "object",
                  "properties": {
                    "attack": {
                      "example": 1
                    },
                    "defense": {
                      "example": 0
                    },
                    "manaBoost": {
                      "example": 0
                    },
                    "hpBoost": {
                      "example": 0
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Inventory"
        ],
        "description": "Please delete only items connected to your characters when using this route",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/inventory/character/{characterId}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "description": "",
        "parameters": [
          {
            "name": "characterId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    }
  }
}